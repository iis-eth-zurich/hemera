{
  "gvsoc": {
    "cycles_to_seconds": "int(max(cycles * nb_cores / 5000000, 600))",
    "trace-file": "stdout",
    "trace-level": "trace",
    "trace": [],
    "event": [],
    "load-binary": [],
    "pdb-no-break": "True",
    "werror": "True",
    "vcd": {
      "help": {
        "active": "Activate VCD tracing.",
        "all": "Activate all VCD traces.",
        "gtkw": "Generate script for Gtkwave."
      },
      "active": false,
      "all": true,
      "gtkw": false,
      "files": []
    }
  },
  "dpi_models": {
    "uart_loopback": {
      "module": "uart_tb.so",
      "baudrate": 625000,
      "loopback": true,
      "stdout": true,
      "tx_file": "tx_uart.log",
      "ports": {
        "in": {
          "type": "uart",
          "itf": 0
        }
      }
    }
  },
  "platform": "gvsoc",
  "pulp_compiler": {
    "default": "gcc",
    "gcc": {},
    "llvm": {}
  },
  "pulp_rt_version": {
    "default": "bench",
    "release": {},
    "bench": {},
    "profile0": {},
    "profile1": {},
    "debug": {}
  },
  "pulp_omp_version": {
    "default": "libgomp",
    "libgomp": {},
    "new": {}
  },
  "testbench": {
    "use_dpi": false
  },
  "vsim": {
    "help": {
      "gui": "Open modelsim using the GUI.",
      "simchecker": "Activate instruction checking through golden model.",
      "script": "Specify the script used to launch the platform"
    },
    "script": "run.tcl",
    "gui": false,
    "simchecker": false,
    "args": [],
    "tcl_args": []
  },
  "runner": {
    "help": {
      "py-stack": "Display the full python stack in case an exception is caught"
    },
    "verbose": false,
    "boot-mode": "jtag",
    "use_tb_comps": false,
    "use_external_tb": false,
    "active_tb_comps": [],
    "py-stack": false,
    "boot_from_flash": false,
    "flash_type": "spi",
    "flash_slm_file": "slm_files/flash_stim.slm",
    "rtl_simulator": "vsim",
    "simulator": null,
    "aes_key": "12345678275689075642768987654345",
    "aes_iv": "0987654323456789"
  },
  "gdb": {
    "active": false
  },
  "rt": {
    "version": "bench",
    "type": "pulp-rt",
    "mode": "rt",
    "stack_size": 2048,
    "cl_master_stack_size": 1024,
    "cl_slave_stack_size": 1024,
    "io": true,
    "warnings": true,
    "werror": true,
    "assert": false,
    "trace": false,
    "trace_level": 0,
    "traces": "all",
    "libc": false,
    "no-rt": false,
    "no-link-script": false,
    "no-crt0": false,
    "cluster-start": false,
    "openmp": true,
    "openmp-rt": "pulp-rt",
    "iodev": "default",
    "user-sections": [],
    "iodevs": {
      "default": {
        "value": "0"
      },
      "uart": {
        "value": "1",
        "channel": "0",
        "baudrate": "625000"
      }
    }
  },
  "loader": {
    "bridge": "none",
    "cable": "proxy",
    "binaries": [],
    "boot": {
      "mode": "jtag"
    }
  },
  "system_tree": {
    "debug_bridge": {
      "cable": {
        "type": "jtag-proxy",
        "tap": 0,
        "jtag-proxy": {
          "port": 37539
        },
        "ftdi": {},
        "active": false,
        "autorun": false,
        "access_timeout_us": 1000000
      },
      "adv_dbg_unit": {
        "debug_ir": "0x4"
      },
      "boot-mode": "default",
      "commands": "load ioloop reqloop start wait",
      "gdb_commands": "load ioloop reqloop start gdb wait"
    },
    "vp_class": "pulp/system",
    "vp_comps": [
      "board"
    ],
    "board": {
      "vp_class": "pulp/board",
      "vp_comps": [
        "chip",
        "dpi_clock",
        "pulp_chip",
        "dpi"
      ],
      "vp_bindings": [
        [
          "dpi_clock->out",
          "dpi->clock"
        ],
        [
          "chip->uart0",
          "dpi->uart0"
        ],
        [
          "dpi->jtag0",
          "chip->jtag0_pad"
        ]
      ],
      "chip": {
        "name": "arnold",
        "pulp_chip_family": "arnold",
        "pulp_chip_version": 0,
        "boot_from_rom": false,
        "vp_class": "pulp/chip",
        "hal_files": [
          "hal/chips/arnold/pulp.h"
        ],
        "archi_files": [
          "archi/chips/arnold/pulp.h",
          "archi/chips/arnold/memory_map.h",
          "archi/chips/arnold/properties.h",
          "archi/chips/arnold/apb_soc.h"
        ],
        "vp_comps": [
          "padframe",
          "soc_clock",
          "soc"
        ],
        "vp_bindings": [
          [
            "padframe->jtag0",
            "soc->jtag"
          ],
          [
            "soc_clock->out",
            "padframe->clock"
          ],
          [
            "soc_clock->out",
            "soc->clock"
          ],
          [
            "soc->spim0",
            "padframe->spim0"
          ],
          [
            "soc->uart0",
            "padframe->uart0"
          ],
          [
            "self->jtag0_pad",
            "padframe->jtag0_pad"
          ],
          [
            "padframe->uart0_pad",
            "self->uart0"
          ]
        ],
        "padframe": {
          "nb_alternate": 4,
          "version": 1,
          "default_profile": "default",
          "vp_class": "pulp/padframe/padframe_v1",
          "profiles": {
            "default": {
              "alternates": [
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]
            }
          },
          "groups": {
            "spim0": {
              "type": "qspim"
            },
            "uart0": {
              "type": "uart"
            },
            "jtag0": {
              "type": "jtag"
            }
          },
          "pads": {
            "pad_spim0_sdio0 (mosi)": {
              "id": 0,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_sdio0",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_sdio1 (miso)": {
              "id": 1,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_sdio1",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_sdio2": {
              "id": 2,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_sdio2",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_sdio3": {
              "id": 3,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_sdio3",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_csn0": {
              "id": 4,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_cs0",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_csn1": {
              "id": 5,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_cs1",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_spim0_sck": {
              "id": 6,
              "position": null,
              "alternates": [
                {
                  "name": "spim0_sck",
                  "groups": [
                    "spim0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_uart_tx": {
              "id": 7,
              "position": null,
              "alternates": [
                {
                  "name": "uart_tx",
                  "groups": [
                    "uart0"
                  ]
                },
                {},
                {},
                {}
              ]
            },
            "pad_uart_rx": {
              "id": 8,
              "position": null,
              "alternates": [
                {
                  "name": "uart_rx",
                  "groups": [
                    "uart0"
                  ]
                },
                {},
                {},
                {}
              ]
            }
          },
          "vp_ports": [
            "jtag0",
            "spim0",
            "uart0",
            "clock",
            "uart0_pad",
            "jtag0_pad"
          ]
        },
        "soc_clock": {
          "vp_class": "vp/clock_domain",
          "frequency": 50000000,
          "vp_ports": [
            "out"
          ]
        },
        "soc": {
          "nb_cluster": null,
          "vp_class": "pulp/soc",
          "peripherals_base": "0x1A100000",
          "soc_events_ids": {
            "soc_evt_spim0_rx": 0,
            "soc_evt_spim0_tx": 1,
            "soc_evt_spim1_rx": 2,
            "soc_evt_spim1_tx": 3,
            "soc_evt_hyper0_rx": 4,
            "soc_evt_hyper0_tx": 5,
            "soc_evt_uart0_rx": 6,
            "soc_evt_uart0_tx": 7,
            "soc_evt_i2c0_rx": 8,
            "soc_evt_i2c0_tx": 9,
            "soc_evt_i2c1_rx": 10,
            "soc_evt_i2c1_tx": 11,
            "soc_evt_i2s_ch0": 12,
            "soc_evt_i2s_ch1": 13,
            "soc_evt_cam0": 14,
            "soc_evt_spim0_eot": 22,
            "soc_evt_l2l2_eot": 23,
            "soc_evt_uart_eot": 25,
            "soc_evt_i2c0_extra": 26,
            "soc_evt_i2c1_extra": 27,
            "soc_evt_i2s_extra": 28,
            "soc_evt_cam0_eot": 29,
            "soc_evt_cluster_pok": 31,
            "soc_evt_cluster_not_busy": 34,
            "soc_evt_cluster_cg_ok": 35,
            "soc_evt_picl_ok": 36,
            "soc_evt_scu_ok": 37,
            "soc_evt_adv_timer0": 38,
            "soc_evt_adv_timer1": 39,
            "soc_evt_adv_timer2": 40,
            "soc_evt_adv_timer3": 41,
            "soc_evt_gpio": 42,
            "soc_evt_rtc_apb": 43,
            "soc_evt_rtc": 44,
            "soc_evt_ref_clock": 56,
            "soc_evt_sw_first": 48,
            "soc_evt_sw_nb": 8,
            "soc_evt_pmu0": 31
          },
          "fc_events": {
            "evt_sw_event0": 0,
            "evt_sw_event2": 2,
            "evt_sw_event1": 1,
            "evt_sw_event3": 3,
            "evt_sw_event4": 4,
            "evt_sw_event5": 5,
            "evt_sw_event6": 6,
            "evt_sw_event7": 7,
            "evt_timer0": 10,
            "evt_timer1": 11,
            "evt_clkref": 14,
            "evt_gpio": 15,
            "evt_rtc": 16,
            "evt_adv_timer0": 17,
            "evt_adv_timer1": 18,
            "evt_adv_timer2": 19,
            "evt_adv_timer3": 20,
            "evt_cluster_not_busy": 21,
            "evt_cluster_pok": 22,
            "evt_cluster_cg_ok": 23,
            "evt_picl_ok": 24,
            "evt_scu_ok": 25,
            "evt_soc_evt": 26,
            "evt_queue_error": 29
          },
          "vp_comps": [
            "axi_ico",
            "soc_ico",
            "apb_ico",
            "fc",
            "l2",
            "l2_priv0",
            "l2_priv1",
            "l2_shared",
            "l2_shared_0",
            "l2_shared_1",
            "l2_shared_2",
            "l2_shared_3",
            "fc_ico",
            "rom",
            "plt_loader",
            "fc_itc",
            "fll",
            "fll1",
            "fll2",
            "fll_ctrl",
            "apb_soc_ctrl",
            "stdout",
            "gpio",
            "timer",
            "hwme",
            "soc_eu",
            "udma",
            "uart",
            "fc_debug",
            "adv_dbg_unit"
          ],
          "vp_ports": [
            "jtag",
            "spim0",
            "uart0",
            "spim0",
            "uart0",
            "jtag",
            "clock"
          ],
          "vp_bindings": [
            [
              "self->jtag",
              "adv_dbg_unit->jtag"
            ],
            [
              "axi_ico->soc",
              "soc_ico->axi_slave"
            ],
            [
              "soc_ico->apb",
              "apb_ico->input"
            ],
            [
              "soc_ico->axi_master",
              "axi_ico->input"
            ],
            [
              "soc_ico->l2_shared_0",
              "l2_shared_0->input"
            ],
            [
              "soc_ico->l2_shared_1",
              "l2_shared_1->input"
            ],
            [
              "soc_ico->l2_shared_2",
              "l2_shared_2->input"
            ],
            [
              "soc_ico->l2_shared_3",
              "l2_shared_3->input"
            ],
            [
              "soc_ico->l2_priv0",
              "l2_priv0->input"
            ],
            [
              "soc_ico->l2_priv1",
              "l2_priv1->input"
            ],
            [
              "apb_ico->stdout",
              "stdout->input"
            ],
            [
              "apb_ico->fll",
              "fll->input"
            ],
            [
              "apb_ico->fll1",
              "fll1->input"
            ],
            [
              "apb_ico->fll2",
              "fll2->input"
            ],
            [
              "apb_ico->udma",
              "udma->input"
            ],
            [
              "apb_ico->soc_eu",
              "soc_eu->input"
            ],
            [
              "apb_ico->apb_soc_ctrl",
              "apb_soc_ctrl->input"
            ],
            [
              "apb_ico->fc_itc",
              "fc_itc->input"
            ],
            [
              "apb_ico->fc_timer",
              "timer->input"
            ],
            [
              "apb_ico->fc_dbg_unit",
              "fc->dbg_unit"
            ],
            [
              "apb_ico->rom",
              "rom->input"
            ],
            [
              "fc->fetch",
              "soc_ico->fc_fetch"
            ],
            [
              "fc->data",
              "soc_ico->fc_data"
            ],
            [
              "fc->irq_ack",
              "fc_itc->irq_ack"
            ],
            [
              "plt_loader->out",
              "soc_ico->debug"
            ],
            [
              "fc_itc->irq_req",
              "fc->irq_req"
            ],
            [
              "apb_soc_ctrl->bootaddr",
              "fc->bootaddr"
            ],
            [
              "apb_soc_ctrl->event",
              "soc_eu->event_in"
            ],
            [
              "timer->irq_itf_0",
              "fc_itc->in_event_10"
            ],
            [
              "timer->irq_itf_1",
              "fc_itc->in_event_11"
            ],
            [
              "soc_eu->fc_event_itf",
              "fc_itc->soc_event"
            ],
            [
              "udma->l2_itf",
              "soc_ico->udma_tx"
            ],
            [
              "udma->event_itf",
              "soc_eu->event_in"
            ],
            [
              "udma->spim0",
              "self->spim0"
            ],
            [
              "udma->uart0",
              "self->uart0"
            ],
            [
              "adv_dbg_unit->io",
              "soc_ico->debug"
            ]
          ],
          "axi_ico": {
            "vp_class": "interco/router",
            "bandwidth": 4,
            "latency": 9,
            "id": 0,
            "mappings": {
              "soc": {
                "base": "0x1A000000",
                "size": "0x06000000"
              }
            },
            "vp_ports": [
              "soc",
              "input"
            ]
          },
          "soc_ico": {
            "nb_l2_shared_banks": 4,
            "gv_class": "pulp.Soc_Ico_v2.Soc_Ico",
            "vp_class": null,
            "vp_comps": [
              "ll_ico",
              "hb_ico",
              "fc_fetch_ico",
              "fc_data_ico",
              "udma_rx_ico",
              "udma_tx_ico"
            ],
            "vp_ports": [
              "debug",
              "axi_slave",
              "fc_fetch",
              "fc_data",
              "udma_tx",
              "apb",
              "axi_master",
              "l2_shared_0",
              "l2_shared_1",
              "l2_shared_2",
              "l2_shared_3",
              "l2_priv0",
              "l2_priv1"
            ],
            "vp_bindings": [
              [
                "self->debug",
                "ll_ico->input"
              ],
              [
                "self->axi_slave",
                "ll_ico->input"
              ],
              [
                "self->fc_fetch",
                "fc_fetch_ico->input"
              ],
              [
                "self->fc_data",
                "fc_data_ico->input"
              ],
              [
                "self->udma_tx",
                "udma_tx_ico->input"
              ],
              [
                "ll_ico->apb",
                "self->apb"
              ],
              [
                "ll_ico->rom",
                "self->apb"
              ],
              [
                "ll_ico->l2_priv0",
                "self->l2_priv0"
              ],
              [
                "ll_ico->l2_priv0_alias",
                "self->l2_priv0"
              ],
              [
                "ll_ico->l2_priv1",
                "self->l2_priv1"
              ],
              [
                "ll_ico->l2_shared",
                "hb_ico->input"
              ],
              [
                "hb_ico->out_0",
                "self->l2_shared_0"
              ],
              [
                "hb_ico->out_1",
                "self->l2_shared_1"
              ],
              [
                "hb_ico->out_2",
                "self->l2_shared_2"
              ],
              [
                "hb_ico->out_3",
                "self->l2_shared_3"
              ],
              [
                "fc_fetch_ico->l2_shared",
                "hb_ico->input"
              ],
              [
                "fc_fetch_ico->ll_ico",
                "ll_ico->input"
              ],
              [
                "fc_data_ico->l2_shared",
                "hb_ico->input"
              ],
              [
                "fc_data_ico->ll_ico",
                "ll_ico->input"
              ],
              [
                "udma_rx_ico->l2_shared",
                "hb_ico->input"
              ],
              [
                "udma_rx_ico->ll_ico",
                "ll_ico->input"
              ],
              [
                "udma_tx_ico->l2_shared",
                "hb_ico->input"
              ],
              [
                "udma_tx_ico->ll_ico",
                "ll_ico->input"
              ]
            ],
            "ll_ico": {
              "vp_class": "interco/router",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "apb": {
                  "base": "0x1A100000",
                  "size": "0x00100000"
                },
                "rom": {
                  "base": "0x1A000000",
                  "size": "0x00002000"
                },
                "l2_priv0": {
                  "base": "0x1C000000",
                  "size": "0x00008000",
                  "remove_offset": "0x1C000000"
                },
                "l2_priv0_alias": {
                  "base": "0x00000000",
                  "size": "0x00008000"
                },
                "l2_priv1": {
                  "base": "0x1C008000",
                  "size": "0x00008000",
                  "remove_offset": "0x1C008000"
                },
                "l2_shared": {
                  "base": "0x1C010000",
                  "size": "0x00070000"
                }
              },
              "vp_ports": [
                "apb",
                "rom",
                "l2_priv0",
                "l2_priv0_alias",
                "l2_priv1",
                "l2_shared",
                "input"
              ]
            },
            "hb_ico": {
              "vp_class": "interco/interleaver",
              "nb_slaves": 4,
              "nb_masters": 0,
              "interleaving_bits": 2,
              "stage_bits": 0,
              "remove_offset": "0x1C010000",
              "vp_ports": [
                "out_0",
                "out_1",
                "out_2",
                "out_3",
                "input"
              ]
            },
            "fc_fetch_ico": {
              "vp_class": "interco/router",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "l2_shared": {
                  "base": "0x1C010000",
                  "size": "0x00070000"
                },
                "ll_ico": {}
              },
              "vp_ports": [
                "l2_shared",
                "ll_ico",
                "input"
              ]
            },
            "fc_data_ico": {
              "vp_class": "interco/router",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "l2_shared": {
                  "base": "0x1C010000",
                  "size": "0x00070000"
                },
                "ll_ico": {}
              },
              "vp_ports": [
                "l2_shared",
                "ll_ico",
                "input"
              ]
            },
            "udma_rx_ico": {
              "vp_class": "interco/router",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "l2_shared": {
                  "base": "0x1C010000",
                  "size": "0x00070000"
                },
                "ll_ico": {}
              },
              "vp_ports": [
                "l2_shared",
                "ll_ico"
              ]
            },
            "udma_tx_ico": {
              "vp_class": "interco/router",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "l2_shared": {
                  "base": "0x1C010000",
                  "size": "0x00070000"
                },
                "ll_ico": {}
              },
              "vp_ports": [
                "l2_shared",
                "ll_ico",
                "input"
              ]
            }
          },
          "apb_ico": {
            "vp_class": "interco/router",
            "bandwidth": 4,
            "latency": 0,
            "id": 0,
            "mappings": {
              "stdout": {
                "base": "0x1A10F000",
                "size": "0x00001000",
                "remove_offset": "0x1A10F000"
              },
              "apb_soc_ctrl": {
                "base": "0x1A104000",
                "size": "0x00001000",
                "remove_offset": "0x1A104000"
              },
              "soc_eu": {
                "base": "0x1A106000",
                "size": "0x00001000",
                "remove_offset": "0x1A106000"
              },
              "gpio": {
                "base": "0x1A101000",
                "size": "0x00001000",
                "remove_offset": "0x1A101000"
              },
              "fll": {
                "base": "0x1A100000",
                "size": "0x00000010",
                "remove_offset": "0x1A100000"
              },
              "fll1": {
                "base": "0x1A100010",
                "size": "0x00000010",
                "remove_offset": "0x1A100010"
              },
              "fll2": {
                "base": "0x1A100020",
                "size": "0x00000010",
                "remove_offset": "0x1A100020"
              },
              "udma": {
                "base": "0x1A102000",
                "size": "0x00002000",
                "remove_offset": "0x1A102000"
              },
              "fc_itc": {
                "base": "0x1A109800",
                "size": "0x00000800",
                "remove_offset": "0x1A109800"
              },
              "fc_debug": {
                "base": "0x1A110000",
                "size": "0x00008000",
                "remove_offset": "0x1A110000"
              },
              "fc_timer": {
                "base": "0x1A10B000",
                "size": "0x00001000",
                "remove_offset": "0x1A10B000"
              },
              "fc_dbg_unit": {
                "base": "0x1A110000",
                "size": "0x00008000",
                "remove_offset": "0x1A110000"
              },
              "rom": {
                "base": "0x1A000000",
                "size": "0x00002000",
                "remove_offset": "0x1A000000"
              }
            },
            "vp_ports": [
              "stdout",
              "fll",
              "fll1",
              "fll2",
              "udma",
              "soc_eu",
              "apb_soc_ctrl",
              "fc_itc",
              "fc_timer",
              "fc_dbg_unit",
              "rom",
              "input"
            ]
          },
          "fc": {
            "version": "ri5cyv2",
            "archi": "riscv",
            "implementation": "ri5cy",
            "gv_isa": [
              "--pulp",
              "--rv32m",
              "--pulpv2",
              "--pulp-perf-counters",
              "--pulp-hw-loop",
              "--itc-external-req",
              "--fpu",
              "--fpud",
              "--shared-fpu"
            ],
            "isa": "RV32IMFCXpulpv2",
            "priv_version": 1.9,
            "perf_counters": true,
            "features": [
              "misaligned",
              "perf"
            ],
            "hal_files": [
              "hal/riscv/riscv_v4.h",
              "hal/riscv/builtins_v2.h",
              "hal/riscv/builtins_v2_emu.h",
              "hal/riscv/types.h"
            ],
            "archi_files": [
              "archi/riscv/priv_1_9.h",
              "archi/riscv/pcer_v1.h"
            ],
            "defines": [
              "ARCHI_CORE_HAS_PULPV2",
              "CORE_PULP_BUILTINS"
            ],
            "vp_class": "cpu/iss/iss",
            "power_models": {
              "clock_gated": {
                "type": "linear",
                "values": {
                  "25": {
                    "1.2": {
                      "any": "1"
                    },
                    "1.1": {
                      "any": "0.9"
                    }
                  }
                }
              },
              "insn": {
                "type": "linear",
                "values": {
                  "25": {
                    "1.2": {
                      "any": "40"
                    },
                    "1.1": {
                      "any": "30"
                    }
                  }
                }
              }
            },
            "cluster_id": 31,
            "core_id": 0,
            "fetch_enable": true,
            "boot_addr": "0x1C008000",
            "vp_ports": [
              "fetch",
              "data",
              "irq_ack",
              "dbg_unit",
              "bootaddr",
              "irq_req"
            ]
          },
          "l2": {
            "is_partitioned": true,
            "nb_shared_banks": 4,
            "map_base": "0x1C000000",
            "map_size": "0x00080000"
          },
          "l2_priv0": {
            "size": 32768,
            "map_base": "0x1C000000",
            "map_size": "0x00008000",
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "l2_priv1": {
            "size": 32768,
            "map_base": "0x1C008000",
            "map_size": "0x00008000",
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "l2_shared": {
            "nb_banks": 4,
            "size": 458752,
            "map_base": "0x1C010000",
            "map_size": "0x00070000"
          },
          "l2_shared_0": {
            "size": 114688,
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "l2_shared_1": {
            "size": 114688,
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "l2_shared_2": {
            "size": 114688,
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "l2_shared_3": {
            "size": 114688,
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "fc_ico": {
            "l2_alias": true
          },
          "rom": {
            "version": 2,
            "hal_files": [
              "hal/rom/rom_v2.h"
            ],
            "size": 8192,
            "map_base": "0x1A000000",
            "map_size": "0x00002000",
            "vp_class": "memory/memory",
            "vp_ports": [
              "input"
            ]
          },
          "plt_loader": {
            "vp_class": "utils/loader",
            "binaries": [],
            "vp_ports": [
              "out"
            ]
          },
          "fc_itc": {
            "version": 1,
            "vp_class": "pulp/itc/itc_v1",
            "hal_files": [
              "hal/itc/itc_v1.h"
            ],
            "archi_files": [
              "archi/itc/itc_v1.h"
            ],
            "nb_fifo_events": 8,
            "fifo_irq": 26,
            "vp_ports": [
              "irq_req",
              "input",
              "irq_ack",
              "in_event_10",
              "in_event_11",
              "soc_event"
            ]
          },
          "fll": {
            "version": 1,
            "vp_class": "pulp/fll/fll_v1",
            "hal_files": [
              "hal/fll/fll_v1.h"
            ],
            "archi_files": [
              "archi/fll/fll_v1.h"
            ],
            "vp_ports": [
              "input"
            ]
          },
          "fll1": {
            "version": 1,
            "vp_class": "pulp/fll/fll_v1",
            "hal_files": [
              "hal/fll/fll_v1.h"
            ],
            "archi_files": [
              "archi/fll/fll_v1.h"
            ],
            "vp_ports": [
              "input"
            ]
          },
          "fll2": {
            "version": 1,
            "vp_class": "pulp/fll/fll_v1",
            "hal_files": [
              "hal/fll/fll_v1.h"
            ],
            "archi_files": [
              "archi/fll/fll_v1.h"
            ],
            "vp_ports": [
              "input"
            ]
          },
          "fll_ctrl": {
            "version": 3,
            "vp_class": "pulp/fll/fll_ctrl",
            "gv_class": "pulp.Fll_ctrl.fll_ctrl"
          },
          "apb_soc_ctrl": {
            "version": 3,
            "vp_class": "pulp/chips/arnold/apb_soc",
            "hal_files": [
              "hal/apb_soc/apb_soc_v3.h"
            ],
            "regmap": {
              "info": {
                "offset": "0x000"
              },
              "fcboot": {
                "offset": "0x004"
              },
              "fcfetch": {
                "offset": "0x008"
              },
              "clusiso": {
                "offset": "0x000C"
              },
              "padfun0": {
                "offset": "0x010"
              },
              "padfun1": {
                "offset": "0x014"
              },
              "padfun2": {
                "offset": "0x018"
              },
              "padfun3": {
                "offset": "0x01C"
              },
              "padcfg0": {
                "offset": "0x020"
              },
              "padcfg1": {
                "offset": "0x024"
              },
              "padcfg2": {
                "offset": "0x028"
              },
              "padcfg3": {
                "offset": "0x02C"
              },
              "padcfg4": {
                "offset": "0x030"
              },
              "padcfg5": {
                "offset": "0x034"
              },
              "padcfg6": {
                "offset": "0x038"
              },
              "padcfg7": {
                "offset": "0x03C"
              },
              "padcfg8": {
                "offset": "0x040"
              },
              "padcfg9": {
                "offset": "0x044"
              },
              "padcfg10": {
                "offset": "0x048"
              },
              "padcfg11": {
                "offset": "0x04C"
              },
              "padcfg12": {
                "offset": "0x050"
              },
              "padcfg13": {
                "offset": "0x054"
              },
              "padcfg14": {
                "offset": "0x058"
              },
              "padcfg15": {
                "offset": "0x05C"
              },
              "clusbusy": {
                "offset": "0x6C"
              },
              "jtagreg": {
                "offset": "0x74"
              },
              "l2_sleep": {
                "offset": "0x78"
              },
              "sleep_ctrl": {
                "offset": "0x7C"
              },
              "corestatus": {
                "offset": "0xA0"
              },
              "cs_ro": {
                "offset": "0xC0"
              },
              "bootsel": {
                "offset": "0xC4"
              },
              "clk_sel": {
                "offset": "0xD0"
              },
              "clk_div_soc": {
                "offset": "0xD4"
              },
              "clk_div_clu": {
                "offset": "0xD8"
              },
              "clk_div_per": {
                "offset": "0xDC"
              }
            },
            "vp_ports": [
              "bootaddr",
              "event",
              "input"
            ]
          },
          "stdout": {
            "version": 3,
            "vp_class": "pulp/stdout/stdout_v3",
            "archi_files": [
              "archi/stdout/stdout_v3.h"
            ],
            "max_cluster": 33,
            "max_core_per_cluster": 16,
            "vp_ports": [
              "input"
            ]
          },
          "gpio": {
            "version": 2,
            "nb_gpio": 32,
            "archi_files": [
              "archi/gpio/gpio_v2.h"
            ],
            "hal_files": [
              "hal/gpio/gpio_v2.h"
            ]
          },
          "timer": {
            "version": 2,
            "vp_class": "pulp/timer/timer_v2",
            "hal_files": [
              "hal/timer/timer_v2.h"
            ],
            "archi_files": [
              "archi/timer/timer_v2.h"
            ],
            "vp_ports": [
              "irq_itf_0",
              "irq_itf_1",
              "input"
            ]
          },
          "hwme": {
            "version": 1,
            "hal_files": [
              "hal/hwme/hwme_v1.h"
            ],
            "archi_files": [
              "archi/hwme/hwme_v1.h"
            ]
          },
          "soc_eu": {
            "version": 1,
            "hal_files": [
              "hal/soc_eu/soc_eu_v1.h"
            ],
            "archi_files": [
              "archi/soc_eu/soc_eu_v1.h"
            ],
            "vp_class": "pulp/soc_eu/soc_eu_v1",
            "properties": {
              "nb_fc_events": 8,
              "first_fc_event": 48
            },
            "vp_ports": [
              "fc_event_itf",
              "input",
              "event_in"
            ]
          },
          "udma": {
            "version": 2,
            "archi": 2,
            "vp_class": "pulp/udma/udma_v2",
            "hal_files": [
              "hal/udma/udma_v2.h",
              "hal/udma/udma_periph_v2.h",
              "hal/udma/udma_periph_hyper_v1.h",
              "hal/udma/udma_periph_i2s_v1.h"
            ],
            "archi_files": [
              "archi/udma/udma_v2.h",
              "archi/udma/udma_periph_v2.h",
              "archi/udma/hyper.h"
            ],
            "regmap": {
              "channel": {
                "type": "template",
                "saddr": {
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "desc": "uDMA start reg",
                  "content": {
                    "saddr": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "reset": "0x0",
                      "desc": "Configure pointer to memory buffer:\n  - Read: value of the pointer until transfer is over. Else returns 0\n  - Write: set Address Pointer to memory buffer start address"
                    }
                  }
                },
                "size": {
                  "type": "register",
                  "offset": "0x04",
                  "width": 32,
                  "desc": "uDMA size reg",
                  "content": {
                    "size": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "reset": "0x0",
                      "desc": "Buffer size in DATASIZE. (128kBytes maximum)\n  - Read: buffer size left\n  - Write: set buffer size"
                    }
                  }
                },
                "cfg": {
                  "type": "register",
                  "offset": "0x08",
                  "width": 32,
                  "desc": "uDMA config reg",
                  "content": {
                    "continuous": {
                      "bit": 0,
                      "width": 1,
                      "reset": "0x0",
                      "access": "R/W",
                      "desc": "Channel continuous mode:\n  -1'b0: disable\n  -1'b1: enable\nAt the end of the buffer the uDMA reloads the address and size and starts a new transfer."
                    },
                    "datasize": {
                      "bit": 1,
                      "width": 2,
                      "reset": "0x0",
                      "access": "R/W",
                      "desc": "Channel transfer size used to increment uDMA buffer address pointer:\n  - 2'b00: +1 (8 bits)\n  - 2'b01: +2 (16 bits)\n  - 2'b10: +4 (32 bits)\n  - 2'b11: +0"
                    },
                    "en": {
                      "bit": 4,
                      "width": 1,
                      "reset": "0x0",
                      "access": "R/W",
                      "desc": "Channel enable and start transfer:\n  -1'b0: disable\n  -1'b1: enable\nThis signal is used also to queue a transfer if one is already ongoing."
                    },
                    "clr": {
                      "bit": 5,
                      "width": 1,
                      "reset": "0x0",
                      "access": "W",
                      "desc": "Channel clear and stop transfer:\n  -1'b0: disable\n  -1'b1: enable"
                    },
                    "pending": {
                      "bit": 6,
                      "width": 1,
                      "reset": "0x0",
                      "access": "R",
                      "desc": "Transfer pending in queue status flag:\n  -1'b0: free\n  -1'b1: pending"
                    }
                  }
                }
              },
              "SPIM": {
                "type": "template",
                "RX": {
                  "type": "group",
                  "template": "channel",
                  "offset": "0x00",
                  "cfg": {
                    "content": {
                      "datasize": {
                        "access": "R",
                        "reset": "0x2"
                      }
                    }
                  }
                },
                "TX": {
                  "type": "group",
                  "template": "channel",
                  "offset": "0x10"
                }
              },
              "SPIM0": {
                "type": "group",
                "template": "SPIM",
                "offset": "0x100"
              }
            },
            "commands": {
              "SPI_CMD_CFG": {
                "desc": "Sets the configuration for the SPI Master IP",
                "content": {
                  "CLKDIV": {
                    "bit": 0,
                    "width": 8,
                    "desc": "Sets the clock divider value"
                  },
                  "CPHA": {
                    "bit": 8,
                    "width": 1,
                    "desc": "Sets the clock phase:\n  - 1'b0: \n  - 1'b1:"
                  },
                  "CPOL": {
                    "bit": 9,
                    "width": 1,
                    "desc": "Sets the clock polarity:\n  - 1'b0:\n  - 1'b1:"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here CFG"
                  }
                }
              },
              "SPI_CMD_SOT": {
                "desc": "Start of stream",
                "content": {
                  "CS": {
                    "bit": 0,
                    "width": 2,
                    "desc": "Sets the Chip Select (CS):\n  - 2'b00: select csn0\n  - 2'b01: select csn1\n  - 2'b10: select csn2\n  - 2'b11: select csn3"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here SOT"
                  }
                }
              },
              "SPI_CMD_SEND_CMD": {
                "desc": "Transmits a configurable size command",
                "content": {
                  "CMD_VALUE": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Sets the command to send. MSB must always be at bit15 also if cmd size is lower than 16"
                  },
                  "CMD_SIZE": {
                    "bit": 16,
                    "width": 5,
                    "desc": "Size in bits of the command to send. The value written here is num bits \u2013 1."
                  },
                  "QPI": {
                    "bit": 27,
                    "width": 1,
                    "desc": "Sends the command using QuadSPI"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here SEND_CMD"
                  }
                }
              },
              "SPI_CMD_SEND_ADDR": {
                "desc": "Transmits a configurable size address",
                "content": {
                  "CMD_SIZE": {
                    "bit": 16,
                    "width": 5,
                    "desc": "Size in bits of the address to send. The value written here is num bits \u2013 1."
                  },
                  "QPI": {
                    "bit": 27,
                    "width": 1,
                    "desc": "Sends the command using QuadSPI"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here SEND_ADDR"
                  }
                }
              },
              "SPI_CMD_DUMMY": {
                "desc": "Transmits a configurable size address",
                "content": {
                  "DUMMY_CYCLE": {
                    "bit": 16,
                    "width": 5,
                    "desc": "Number of dummy cycles to perform"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here DUMMY"
                  }
                }
              },
              "SPI_CMD_WAIT": {
                "desc": "Waits an external event to move to the next instruction",
                "content": {
                  "EVENT_ID": {
                    "bit": 0,
                    "width": 2,
                    "desc": "External event id"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here WAIT"
                  }
                }
              },
              "SPI_CMD_TX_DATA": {
                "desc": "Sends data (max 64Kbits)",
                "content": {
                  "DATA_SIZE": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Number of bits to send (Max 64Kbits). The value written here is num bits \u2013 1."
                  },
                  "BYTE_ALIGN": {
                    "bit": 26,
                    "width": 1,
                    "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                  },
                  "QPI": {
                    "bit": 27,
                    "width": 1,
                    "desc": "Sends the command using QuadSPI"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here TX_DATA"
                  }
                }
              },
              "SPI_CMD_RX_DATA": {
                "desc": "Receives data (max 64Kbits)",
                "content": {
                  "DATA_SIZE": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Number of bits to receive (Max 64Kbits). The value written here is num bits \u2013 1."
                  },
                  "BYTE_ALIGN": {
                    "bit": 26,
                    "width": 1,
                    "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                  },
                  "QPI": {
                    "bit": 27,
                    "width": 1,
                    "desc": "Sends the command using QuadSPI"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here RX_DATA"
                  }
                }
              },
              "SPI_CMD_RPT": {
                "desc": "Repeat the next transfer N times",
                "content": {
                  "RPT_CNT": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Number of transfers to repeat (Max 64K)"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here RPT"
                  }
                }
              },
              "SPI_CMD_EOT": {
                "desc": "End of stream",
                "content": {
                  "EVENT_GEN": {
                    "bit": 0,
                    "width": 1,
                    "desc": "Enable EOT event:\n  - 1'b0: disable\n  - 1'b1: enable"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here EOT"
                  }
                }
              },
              "SPI_CMD_RPT_END": {
                "desc": "End of the repeat loop command",
                "content": {
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here RPT_END"
                  }
                }
              },
              "SPI_CMD_RX_CHECK": {
                "desc": "Check up ot 16 bits of data against an expected value",
                "content": {
                  "COMP_DATA": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Data to compare. Max 16bits"
                  },
                  "STATUS_SIZE": {
                    "bit": 16,
                    "width": 4,
                    "desc": "Size in bits of the word to read. The value written here is num bits \u2013 1."
                  },
                  "CHECK_TYPE": {
                    "bit": 24,
                    "width": 2,
                    "desc": "Select check to process:\n  - 2'b00: compare bit a bit\n  - 2'b01: compare only ones\n  - 2'b10: compare ony zeros"
                  },
                  "BYTE_ALIGN": {
                    "bit": 26,
                    "width": 1,
                    "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                  },
                  "QPI": {
                    "bit": 27,
                    "width": 1,
                    "desc": "Sends the command using QuadSPI"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here RX_CHECK"
                  }
                }
              },
              "SPI_CMD_FULL_DUPL": {
                "desc": "Activate full duplex mode",
                "content": {
                  "DATA_SIZE": {
                    "bit": 0,
                    "width": 16,
                    "desc": "Number of bits to send (Max 64Kbits). The value written here is num bits \u2013 1."
                  },
                  "BYTE_ALIGN": {
                    "bit": 26,
                    "width": 1,
                    "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                  },
                  "SPI_CMD": {
                    "bit": 28,
                    "width": 4,
                    "desc": "Select the SPIM command to be processed. Here FULL_DUPLEX"
                  }
                }
              }
            },
            "nb_periphs": 7,
            "interfaces": [
              "memcpy",
              "spim",
              "i2c",
              "i2s",
              "uart",
              "cam"
            ],
            "properties": {
              "l2_read_fifo_size": 8
            },
            "uart": {
              "version": 1,
              "nb_channels": 1,
              "ids": [
                0
              ],
              "offsets": [
                "0x00"
              ]
            },
            "memcpy": {
              "version": 1,
              "nb_channels": 1,
              "ids": [
                1
              ],
              "offsets": [
                "0x080"
              ]
            },
            "spim": {
              "version": 2,
              "nb_channels": 1,
              "ids": [
                2
              ],
              "offsets": [
                "0x100"
              ]
            },
            "i2c": {
              "version": 2,
              "nb_channels": 2,
              "ids": [
                3,
                4
              ],
              "offsets": [
                "0x180",
                "0x200"
              ]
            },
            "i2s": {
              "version": 1,
              "nb_channels": 1,
              "ids": [
                5
              ],
              "offsets": [
                "0x280"
              ]
            },
            "cam": {
              "version": 1,
              "nb_channels": 1,
              "ids": [
                6
              ],
              "offsets": [
                "0x300"
              ]
            },
            "vp_ports": [
              "l2_itf",
              "event_itf",
              "spim0",
              "uart0",
              "input"
            ]
          },
          "uart": {
            "version": 1
          },
          "fc_debug": {
            "version": 1
          },
          "adv_dbg_unit": {
            "vp_class": "pulp/adv_dbg_unit/adv_dbg_unit",
            "vp_ports": [
              "io",
              "jtag"
            ]
          }
        },
        "vp_ports": [
          "uart0",
          "jtag0",
          "ctrl",
          "jtag0_pad",
          "cpi0"
        ]
      },
      "dpi_clock": {
        "vp_class": "vp/clock_domain",
        "frequency": 50000000,
        "vp_ports": [
          "out"
        ]
      },
      "pulp_chip": {
        "arnold": {}
      },
      "dpi": {
        "vp_class": "utils/dpi_wrapper",
        "vp_ports": [
          "clock",
          "jtag0",
          "uart0"
        ]
      },
      "tb_comps": [
        "jtag_proxy",
        "uart",
        "camera"
      ],
      "tb_bindings": [
        [
          "chip->uart0",
          "uart->uart"
        ],
        [
          "chip->jtag0",
          "jtag_proxy->jtag"
        ],
        [
          "chip->ctrl",
          "jtag_proxy->ctrl"
        ],
        [
          "camera->cpi",
          "chip->cpi0"
        ]
      ],
      "jtag_proxy": {
        "type": "dpi",
        "active": false,
        "module": "jtag_proxy.so",
        "verbose": false,
        "port": 37539,
        "vp_ports": [
          "jtag",
          "ctrl"
        ]
      },
      "uart": {
        "type": "dpi",
        "module": "uart.so",
        "verbose": false,
        "baudrate": 625000,
        "loopback": false,
        "stdout": false,
        "tx_file": "tx_uart.log",
        "vp_ports": [
          "uart"
        ]
      },
      "camera": {
        "type": "dpi",
        "model": "himax",
        "module": "camera.so",
        "vp_ports": [
          "cpi"
        ]
      }
    }
  },
  "vp_comps": [
    "system_tree"
  ]
}
